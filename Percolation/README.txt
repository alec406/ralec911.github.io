   Models a system comprised of an n-by-n grid of sites. A site can either be open or closed. A site becomes full if it's connected to an open site on the top row through a chain of open sites. The system percolates if there is a path of open sites from the top row to the bottom row.
   If sites are set to be open with probability p, what is the probability that the system percolates? When p equals 0, the system does not percolate; when p equals 1, the system percolates. When n is sufficiently large, there is a threshold value p* such that when p<p* a random n-by-n grid almost never percolates, and when p>p*, a random n-by-n grid almost always percolates. The purpose of this computer program is to estimate p*.   
   This is accomplished by using a union-find data structure. Through using the union-find data structure, it's easy to determine what sites are connected to open sites on the top row. 
   The driver of this program is PercolationStats.java. This will continue opening random sites until the system percolates. Once the system percolates, it will calculate the percent of sites that needed to be opened to achieve this percolation. If you run this enough times, you can get a good estimate of the percolation threshold.
